/**
 * Tailwind CSS Directives
 * Import Tailwind's base, component, and utility styles
 */
@tailwind base;
@tailwind components;
@tailwind utilities;

/**
 * Global CSS Variables
 * Defines color scheme and design tokens for the application
 * These variables are used throughout the app for consistent theming
 */
:root {
  /* RGB values for foreground and background colors */
  --foreground-rgb: 255, 255, 255;
  --background-start-rgb: 0, 0, 0;
  --background-end-rgb: 128, 128, 128;
  
  /* Basic color palette */
  --white: #FFF;
  --black: #000;
  --transp: rgba(0, 0, 0, 0);
  
  /* Brand colors for different apps */
  --lamp: #F7B249;          /* Elevator app primary color */
  --dark: #383635;           /* Dark theme color */
  --jaYellow: #ffA500;       /* Japanese app accent */
  --crossingRed: #D44028;    /* Crossing app primary */
  --crossingYellow: #EEAE42; /* Crossing app secondary */
  --jaBlue: #0077FF;         /* Japanese app primary */
  --allowancePurple: #8040FF; /* Allowance app primary */
  --allowancePink: #FF40FF;   /* Allowance app secondary */
  --allowanceBlue: #00FFFF;   /* Allowance app accent */
  --enPink: #FF69B4;         /* English app accent */
  --enBlue: #03A9F4;         /* English app primary */
  --signalGreen: #57BFA3;    /* Signal app primary */
  --toiletBlue: #86BDDA;     /* Toilet app primary */
  --transitGreen: #03DAC5;   /* Transit app primary */
  --transitBlue: #3700B3;    /* Transit app secondary */
  
  /* Transparency utilities */
  --transpBlack: rgba(0, 0, 0, 0.9);
  --transpWhite: rgba(255, 255, 255, 0.9);
}

/**
 * Base Styles Layer
 * Foundation styles for HTML elements and global defaults
 * These styles provide the base appearance for all elements
 */
@layer base {
  /* Universal box-sizing for consistent sizing */
  * {
    box-sizing: border-box;
  }
  
  /* Smooth scrolling for better user experience */
  html {
    scroll-behavior: smooth;
  }
  
  /* Global body styles for consistent typography and layout */
  body { 
    padding: 0; 
    margin: 0; 
    font-family: "Open Sans", sans-serif !important; 
    font-size: 18px; 
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    background-color: #000;
    color: #fff;
  }
  
  /* Link styling with smooth transitions */
  a { 
    text-decoration: none; 
    transition: all 0.2s ease-in-out;
  }
  
  a:hover { 
    text-decoration: underline; 
  }
  
  /* Responsive image handling */
  img { 
    max-width: 100%; 
    display: block; 
    height: auto;
  }
}

/**
 * Component Styles Layer
 * Reusable component classes and layout utilities
 * These classes provide common layout patterns and component styles
 */
@layer components {
  /* Main layout container for full-height pages */
  .main { 
    display: flex; 
    flex-direction: column; 
    align-items: center; 
    justify-content: space-between; 
    min-height: 100vh; 
    margin: 0; 
  }
  
  /**
   * Background class for elevatorneo app
   * Creates gradient background from white to lamp color
   */
  .elevatorneo-background {
    background: linear-gradient(to bottom, var(--white) 0%, var(--lamp) 100%);
  }
  
  /* Dark theme container with gradient overlay */
  .dark_container { 
    color: white; 
    background: linear-gradient(to bottom, transparent, black) gray; 
  }
  
  /* Light theme container with gradient overlay */
  .light_container { 
    color: black; 
    background: linear-gradient(to bottom, transparent, white) lightgray; 
  }
  
  /* YouTube video container with aspect ratio */
  .youtube { 
    width: 100%; 
    aspect-ratio: 16 / 9; 
  }
  
  /* YouTube iframe styling for responsive videos */
  .youtube iframe { 
    width: 100%; 
    height: 100%; 
  }
  
  /* Flexbox utility for centered content */
  .flex_center {
    display: flex; 
    justify-content: center; 
    align-items: center;
  }
  
  /* Flexbox utility for centered content with wrapping */
  .flex_center_wrap {
    display: flex; 
    justify-content: center; 
    align-items: center; 
    flex-wrap: wrap;
  }
  
  /* Flexbox utility for left-aligned content with wrapping */
  .flex_left_wrap {
    display: flex; 
    justify-content: left; 
    align-items: left; 
    flex-wrap: wrap;
  }
  
  /* Block element with centered content */
  .block_center {
    display: block; 
    justify-content: center; 
    align-items: center;
  }
  
  /* Fixed header positioning */
  .header { 
    position: fixed; 
    z-index: 100; 
    top: 0; 
    width: 100vw; 
    height: 70px;
  }
  
  /* Fixed menu with smooth transitions */
  .menu {
    position: fixed; 
    width: 100vw; 
    top: 0; 
    transition: all 0.5s ease-in-out;
  }
  
  /* Standard container with padding */
  .container {
    width: 100vw;
    padding: 20px 0;
  }
  
  /* Responsive image styling */
  .image { 
    width: 100%; 
    height: auto;
  }

  /* Custom font family classes for different app themes */
  .beon { 
    font-family: "Beon", sans-serif; 
  }
  
  .cornerStone { 
    font-family: "CornerStone", sans-serif; 
  }
  
  .pacifico { 
    font-family: "Pacifico", cursive; 
  }
  
  .kodomo { 
    font-family: "Kodomo", sans-serif; 
  }
  
  .riipop { 
    font-family: "RiiPop", sans-serif; 
  }
  
  .yasashisa { 
    font-family: "Yasashisa", sans-serif; 
  }
}

/**
 * Animation Keyframes
 * Defines various animation effects for UI transitions and interactions
 * These animations provide smooth visual feedback and enhance user experience
 */
@keyframes fadeIn { 
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeOut { 
  from { opacity: 1; }
  to { opacity: 0; }
}

@keyframes slideIn { 
  from { transform: translateX(-100%); }
  to { transform: translateX(0); }
}

@keyframes fadeInScale { 
  from { 
    opacity: 0; 
    transform: scale(0.8); 
  }
  to { 
    opacity: 1; 
    transform: scale(1); 
  }
}

/**
 * Page Transition Animations
 * Smooth transitions for page navigation and content loading
 * These animations provide visual continuity between page changes
 */
@keyframes pageTransition {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes pageTransitionSlide {
  from {
    opacity: 0;
    transform: translateX(-100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes pageTransitionZoom {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Page transition utility classes */
.page-transition {
  animation: pageTransition 0.3s ease-out;
}

.page-transition-slow {
  animation: pageTransition 0.5s ease-out;
}

.page-transition-slide {
  animation: pageTransitionSlide 0.4s ease-out;
}

.page-transition-zoom {
  animation: pageTransitionZoom 0.3s ease-out;
}

/**
 * Responsive Design Media Queries
 * Adjusts layout and typography for different screen sizes
 * Ensures optimal viewing experience across all devices
 */
@media (max-width: 768px) {
  /* Tablet and mobile adjustments */
  body {
    font-size: 16px;
  }
  
  .container {
    padding: 15px 0;
  }
}

@media (max-width: 480px) {
  /* Small mobile adjustments */
  body {
    font-size: 14px;
  }
  
  .container {
    padding: 10px 0;
  }
}